name: Deploy TorrentBox Secrets

on:
  workflow_dispatch:  # Manual trigger
  push:
    branches: [ main ]
    paths:
      - 'kubernetes/base/secret.yaml'
      - '.github/workflows/update-secrets.yml'

permissions:
  contents: read

jobs:
  deploy-secrets:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
        
    - name: Create temporary secret manifest
      run: |
        # Create a temporary secret file with actual values (never committed to Git)
        cat > /tmp/torrentbox-secrets.yaml << 'EOF'
        apiVersion: v1
        kind: Secret
        metadata:
          name: torrentbox-secrets
          namespace: torrentbox
        type: Opaque
        stringData:
          # Gluetun VPN Credentials (Custom WireGuard)
          WIREGUARD_PRIVATE_KEY: "${{ secrets.WIREGUARD_PRIVATE_KEY }}"
          WIREGUARD_PUBLIC_KEY: "${{ secrets.WIREGUARD_PUBLIC_KEY }}"
          
          # qBittorrent Credentials
          QBITTORRENT_PASSWORD: "${{ secrets.QBT_PASSWORD }}"
          
          # API Keys/Tokens
          DISCORD_BOT: "${{ secrets.DISCORD_BOT_TOKEN }}"
          RADARR_API: "${{ secrets.RADARR_API_KEY }}"
          SONARR_API: "${{ secrets.SONARR_API_KEY }}"
          PLEX_CLAIM: "${{ secrets.PLEX_CLAIM }}"
          
          # VPN Configuration
          VPN_SERVICE_PROVIDER: "nordvpn"
          VPN_TYPE: "wireguard"
          WIREGUARD_ADDRESSES: "10.5.0.2/32"
          SERVER_REGIONS: "Europe"
          SERVER_CATEGORIES: "Standard VPN servers,P2P"
          UPDATER_PERIOD: "24h"
          
          # Application Configuration
          WEBUI_PORT: "8080"
          PLEX_VERSION: "docker"
          FLARESOLVERR_LOG_LEVEL: "info"
          FLARESOLVERR_LOG_HTML: "false"
          CAPTCHA_SOLVER: "none"
        EOF
        
    - name: Setup kubectl
      uses: azure/setup-kubectl@v4
      with:
        version: 'latest'
        
    - name: Configure kubectl for K3s
      run: |
        # Create kubeconfig for K3s cluster
        mkdir -p ~/.kube
        echo "${{ secrets.KUBECONFIG_K3S }}" | base64 -d > ~/.kube/config
        chmod 600 ~/.kube/config
        
    - name: Verify cluster connection
      run: |
        kubectl cluster-info
        kubectl get nodes
        
    - name: Deploy secrets to cluster
      run: |
        # Apply the secret directly to the cluster (bypasses Git entirely)
        kubectl apply -f /tmp/torrentbox-secrets.yaml
        
        # Verify secret was created
        kubectl get secret torrentbox-secrets -n torrentbox -o yaml | grep -v 'data:' | head -20
        
    - name: Cleanup temporary files
      run: |
        rm -f /tmp/torrentbox-secrets.yaml